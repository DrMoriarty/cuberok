/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a dbusinterface org.qtdesktop.cuberok.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DBUSINTERFACE_H_1265653750
#define DBUSINTERFACE_H_1265653750

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.qtdesktop.cuberok
 */
class CuberokAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.qtdesktop.cuberok")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.qtdesktop.cuberok\" >\n"
"    <method name=\"newPlaylist\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"open\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\" />\n"
"    </method>\n"
"    <method name=\"volume\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"vol\" />\n"
"    </method>\n"
"    <method name=\"next\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"prev\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"stop\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"play\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"status\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    CuberokAdaptor(QObject *parent);
    virtual ~CuberokAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    Q_NOREPLY void newPlaylist();
    Q_NOREPLY void next();
    Q_NOREPLY void open(const QString &url);
    Q_NOREPLY void play();
    Q_NOREPLY void prev();
    QString status();
    Q_NOREPLY void stop();
    Q_NOREPLY void volume(int vol);
Q_SIGNALS: // SIGNALS
private:
	void sendCommand(const QStringList& list);
};

#endif
